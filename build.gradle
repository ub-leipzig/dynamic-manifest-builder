buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

plugins {
    id "com.zyxist.chainsaw" version "0.3.1"
    id 'net.researchgate.release' version '2.6.0'
    id 'com.github.hierynomus.license' version '0.14.0'
    id 'io.codearte.nexus-staging' version '0.9.0'
}

ext {
    /* Dependencies */
    camelVersion = '2.20.0'
    jacksonVersion = '2.9.5'
    jsonldVersion = "0.11.1"

    /* Testing */
    jaxbVersion = '2.3.0'
    javaxActivationVersion = '1.1.1'
    junitVersion = '5.0.1'
    junitPlatformVersion = '1.0.1'
    jaxbVersion = '2.3.0'
    jenaVersion = '3.5.0'
    activationVersion = '1.1.1'
    logbackVersion = '1.2.3'
    apiguardianVersion = '1.0.0'

    /* Transitive patched modules */
    commonsLoggingVersion = '1.2'
    jaxbCoreVersion = '2.2.11'
    httpClientOsgiVersion = '4.5.3'
    httpCoreOsgiVersion = '4.4.6'

    jacocoVersion = '0.8.0'
    checkstyleVersion = '8.8'
}

configure(allprojects) { project ->

    ext {
        name = 'IIIF Dynamo'
        description = 'A Camel LDP implementation'
        vendor = 'pandorasystems'
        homepage = 'http://www.trellisldp.org'
        url = 'http://www.trellisldp.org/apidocs'
        license = 'Apache 2'
        inceptionYear = '2017'
    }

    group = 'org.ubl.iiif.dynamic'

    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
    }
}

subprojects {
    apply plugin: 'application'
    apply plugin: 'com.zyxist.chainsaw'
    apply plugin: 'maven'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    apply plugin: 'checkstyle'
    apply plugin: 'com.github.hierynomus.license'

    sourceCompatibility = 1.10
    targetCompatibility = 1.10

    checkstyle {
        configFile = rootProject.file('buildtools/src/main/resources/checkstyle/checkstyle.xml')
        configProperties.checkstyleConfigDir = rootProject.file('buildtools/src/main/resources/checkstyle/')
        toolVersion = checkstyleVersion
    }

    license {
        include "**/*.java"
        //noinspection GroovyAssignabilityCheck
        header rootProject.file('buildtools/src/main/resources/license/HEADER.txt')
        //noinspection GroovyAssignabilityCheck
        strictCheck true
        mapping {
            java = 'SLASHSTAR_STYLE'
        }
    }
}

project("dynamo") {
    mainClassName = 'org.ubl.iiif.dynamic.camel.Dynamo'
    description = 'A Camel service that assembles manifests from RDF queries'

    javaModule {
        name = 'org.ubl.iiif.dynamic'
        hacks {
            patches('org.apache.camel:camel-core-osgi', 'org.apache.camel:camel-core.')
            patches('com.sun.xml.bind:jaxb-impl', 'javax.xml.bind:jaxb-api')
            patches('com.sun.xml.bind:jaxb-core', 'javax.xml.bind:jaxb-api')
            patches('org.apache.httpcomponents:httpcore', 'org.apache.httpcomponents:httpcore-osgi')
            patches('org.apache.httpcomponents:httpcore-nio', 'org.apache.httpcomponents:httpcore-osgi')
            patches('org.apache.httpcomponents:httpclient-osgi', 'org.apache.httpcomponents:httpclient')
            patches('org.slf4j:jcl.over.slf4j', 'commons-logging:commons-logging')
        }
    }

    dependencies {
        patch "org.apache.camel:camel-core-osgi:${camelVersion}"
        patch "com.sun.xml.bind:jaxb-core:${jaxbCoreVersion}"
        patch "com.sun.xml.bind:jaxb-impl:${jaxbCoreVersion}"
        patch "org.apache.httpcomponents:httpclient-osgi:$httpClientOsgiVersion"
        patch "org.apache.httpcomponents:httpcore:${httpCoreOsgiVersion}"
        patch "org.apache.httpcomponents:httpcore-nio:${httpCoreOsgiVersion}"
        patch "commons-logging:commons-logging:${commonsLoggingVersion}"

        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jacksonVersion
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
        implementation group: 'javax.xml.bind', name: 'jaxb-api', version: jaxbVersion
        implementation group: 'org.apache.camel', name: 'camel-jetty9', version: camelVersion
        implementation group: 'org.apache.camel', name: 'camel-http4', version: camelVersion
        implementation group: 'org.apache.httpcomponents', name: 'httpclient-cache', version: httpClientOsgiVersion
        implementation group: 'com.github.jsonld-java', name: 'jsonld-java', version: jsonldVersion
        implementation group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
        testImplementation group: 'org.apiguardian', name: 'apiguardian-api', version: apiguardianVersion
        testImplementation group: 'org.junit.platform', name: 'junit-platform-runner', version: junitPlatformVersion
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion
        testImplementation group: 'org.apache.camel', name: 'camel-test', version: camelVersion
        testImplementation group: 'org.apache.camel', name: 'camel-jetty9', version: camelVersion
        testImplementation group: 'org.apache.camel', name: 'camel-http4', version: camelVersion
        testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
    }
}

configure(rootProject) {
    license {
        include "**/*.java"
        //noinspection GroovyAssignabilityCheck
        header rootProject.file('buildtools/src/main/resources/license/HEADER.txt')
        //noinspection GroovyAssignabilityCheck
        strictCheck true
        mapping {
            java = 'SLASHSTAR_STYLE'
        }
    }
}